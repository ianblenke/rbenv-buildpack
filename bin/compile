#!/usr/bin/env bash

set -ex

BUILD_DIR=$1 # The app directory, usually /app
CACHE_DIR=$2 # The contents of CACHE_DIR will be persisted between builds. 
ENV_DIR=$3     # An envdir directory of the app's environment variables

perl -pi -e "s%archive.ubuntu.com/ubuntu%old-releases.ubuntu.com/ubuntu%g" /etc/apt/sources.list

APT_CACHE_PATH=$CACHE_DIR/apt
mkdir -p $APT_CACHE_PATH

apt-get -o dir::cache::archives=$APT_CACHE_PATH update
LC_ALL=C DEBIAN_FRONTEND=noninteractive apt-get -o dir::cache::archives=$APT_CACHE_PATH dist-upgrade -f -y

RBENV_ROOT=$BUILD_DIR/.rbenv
[ -d /usr/local/rbenv ] || git clone https://github.com/sstephenson/rbenv.git $RBENV_ROOT

RBENV_PROFILE=$BUILD_DIR/.profile.d/rbenv
mkdir -p $BUILD_DIR/.profile.d
echo export RBENV_ROOT=\"$RBENV_ROOT\" >> $RBENV_PROFILE
echo 'export PATH="$RBENV_ROOT/bin:$PATH"' >> $RBENV_PROFILE
echo 'eval "$(rbenv init -)"' >> $RBENV_PROFILE

source $RBENV_PROFILE

[ -d /usr/local/rbenv/plugins/ruby-build ] || git clone https://github.com/sstephenson/ruby-build.git $RBENV_ROOT/plugins/ruby-build

LC_ALL=C DEBIAN_FRONTEND=noninteractive apt-get -o dir::cache::archives=$APT_CACHE_PATH install autoconf bison build-essential libssl-dev zlib1g zlib1g-dev -f -y

RUBY_BUILD_CACHE_PATH=$CACHE_DIR/ruby-build.cache
mkdir -p $RUBY_BUILD_CACHE_PATH

RUBY_BUILD_BUILD_PATH=$CACHE_DIR/ruby-build.sources
mkdir -p $RUBY_BUILD_BUILD_PATH

[ -f /app/.ruby-version ] && rbenv install --keep $(cat $BUILD_DIR/.ruby-version)

ruby_version=$(grep -e '^ruby ' $BUILD_DIR/Gemfile | sed -e 's/^ruby //') || true
[ -z $ruby_version ] || rbenv install --keep $ruby_version

[ -f /app/Gemfile ] && bash -c "
  . $RBENV_PROFILE
  rbenv rehash
  cd /app
  which ruby
  ruby --version
  which gem
  gem --version
  gem install update_rubygems
  update_rubygems
  which gem
  gem --version
  gem install bundler
  which bundle
  bundle --version
  bundle install
" || true

export PATH RBENV_ROOT

